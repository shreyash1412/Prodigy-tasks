# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Load the dataset
url = "https://archive.ics.uci.edu/ml/datasets/Bank+Marketing"
bank_data = pd.read_csv(url, compression='zip', sep=';')

# Data preprocessing
# Assuming you've identified the relevant features and target variable
# Replace 'features' and 'target' with your selected columns
features = ['age', 'job', 'education', 'campaign', 'pdays', 'previous']
target = 'y'

# Convert categorical variables to numerical using one-hot encoding
bank_data = pd.get_dummies(bank_data, columns=['job', 'education'])

# Split data into features and target variable
X = bank_data[features]
y = bank_data[target]

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build the decision tree classifier
clf = DecisionTreeClassifier(random_state=42)

# Train the classifier
clf.fit(X_train, y_train)

# Make predictions on the test set
y_pred = clf.predict(X_test)

# Evaluate the classifier
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
